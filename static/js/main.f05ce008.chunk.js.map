{"version":3,"sources":["components/Book.js","components/Shelf.js","components/SearchBtn.js","components/Shelves.js","pages/Home.js","BooksAPI.js","pages/Search.js","App.js","index.js"],"names":["Book","props","book","booksStatus","booksWithStatus","react_default","a","createElement","className","key","id","style","width","height","backgroundImage","concat","imageLinks","thumbnail","value","shelf","onChange","e","bookShelfHandler","target","disabled","title","authors","Shelf","booksSlef","books","map","components_Book","SearchBtn","react_router_dom","to","Shelves","currentlyReading","filter","wantToRead","read","components_Shelf","components_SearchBtn","Home","components_Shelves","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","then","res","json","data","update","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Search","state","searchResult","UpdateQuery","_this","setState","BooksAPI","_this2","this","booksWithStatusObject","forEach","el","showingBooks","length","i","type","placeholder","event","Component","BooksApp","react_router","exact","path","pages_Home","pages_Search","React","ReactDOM","render","basename","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f05ce008.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Book = (props) => {\r\n    const book = props.book;\r\n    const booksStatus = props.booksWithStatus;\r\n    return (\r\n        <div className=\"book\" key={book.id}>\r\n            <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{ width: 128, height: 192, backgroundImage: `url(${book && book.imageLinks && book.imageLinks.thumbnail})` }}></div>\r\n                <div className=\"book-shelf-changer\">\r\n                    <select value={book.shelf} onChange={(e) => { props.bookShelfHandler(book, e.target.value) }}>\r\n\r\n\r\n                        <option className={booksStatus && booksStatus === 'currentlyReading' ? 'checked' : 'unchecked'}\r\n                            value=\"currentlyReading\"\r\n                            disabled={booksStatus && booksStatus === 'currentlyReading' ? true : false}>\r\n                            Currently Reading\r\n                        </option>\r\n                        <option\r\n                            value=\"wantToRead\"\r\n                            className={booksStatus && booksStatus === 'wantToRead' ? 'checked' : 'unchecked'}\r\n                            disabled={booksStatus && booksStatus === 'wantToRead' ? true : false}\r\n                        >Want to Read\r\n                        </option>\r\n                        <option\r\n                            value=\"read\"\r\n                            className={booksStatus && booksStatus === 'read' ? 'checked' : 'unchecked'}\r\n                            disabled={booksStatus && booksStatus === 'read' ? true : false}\r\n                        >Read\r\n                        </option>\r\n                        <option value=\"none\"\r\n                            className={booksStatus && booksStatus === '' ? 'checked' : 'unchecked'}\r\n                            disabled={booksStatus && booksStatus === '' ? true : false}\r\n                        >None</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <div className=\"book-title\">{book.title}</div>\r\n            <div className=\"book-authors\">{book.authors}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './Book'\r\nconst Shelf = (props) => {\r\n    const booksSlef = props.books\r\n    return (\r\n        <div className=\"bookshelf\">\r\n            <h2 className=\"bookshelf-title\">{props.title}</h2>\r\n            <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                    {booksSlef.map(book => {\r\n                        return (\r\n                            <li key={book.id}>\r\n                                <Book book={book} bookShelfHandler={props.bookShelfHandler} />\r\n                            </li>\r\n                        )\r\n                    })}\r\n\r\n                </ol>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shelf;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nconst SearchBtn = () => {\r\n    return (\r\n        <div className=\"open-search\">\r\n            <Link to=\"/search\"><button> Add a book</button></Link>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBtn;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport Shelf from './Shelf';\r\nimport SearchBtn from './SearchBtn';\r\n\r\nconst Shelves = (props) => {\r\n    const books = props.books\r\n    const currentlyReading = books.filter(book => book.shelf === \"currentlyReading\")\r\n    const wantToRead = books.filter(book => book.shelf === \"wantToRead\")\r\n    const read = books.filter(book => book.shelf === \"read\")\r\n\r\n    return (\r\n        <div className=\"list-books\">\r\n            <div className=\"list-books-title\">\r\n                <h1>MyReads</h1>\r\n            </div>\r\n            <div className=\"list-books-content\">\r\n                <Shelf books={currentlyReading} title={\"Currently reading\"} bookShelfHandler={props.bookShelfHandler} />\r\n                <Shelf books={wantToRead} title={\"Want to read\"} bookShelfHandler={props.bookShelfHandler} />\r\n                <Shelf books={read} title={\"Read\"} bookShelfHandler={props.bookShelfHandler} />\r\n            </div>\r\n            <SearchBtn />\r\n        </div>\r\n    );\r\n};\r\nShelves.propTypes = {\r\n    books: propTypes.array.isRequired,\r\n    bookShelfHandler: propTypes.func.isRequired,\r\n}\r\nexport default Shelves;","import React from 'react';\r\nimport Shelves from '../components/Shelves';\r\nimport propTypes from 'prop-types';\r\nconst Home = (props) => {\r\n    const books = props.books\r\n    return (\r\n        <div>\r\n            <Shelves books={books} bookShelfHandler={props.bookShelfHandler} />\r\n        </div>\r\n    );\r\n\r\n};\r\nHome.propTypes = {\r\n    books: propTypes.array.isRequired\r\n}\r\n\r\nexport default Home;","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from 'react';\r\nimport Book from '../components/Book'\r\nimport { Link } from \"react-router-dom\";\r\nimport * as BooksAPI from '../BooksAPI'\r\nclass Search extends Component {\r\n    state = {\r\n        query: '',\r\n        searchResult: []\r\n    }\r\n    UpdateQuery = (query) => {\r\n\r\n        this.setState({\r\n            query: query\r\n        })\r\n        BooksAPI.search(query).then((res) => {\r\n            this.setState({\r\n                searchResult: res\r\n            })\r\n        })\r\n    }\r\n    render() {\r\n        const query = this.state.query;\r\n        const searchResult = this.state.searchResult;\r\n        const booksWithStatusObject = {}\r\n        this.props.books.forEach(el => {\r\n            booksWithStatusObject[el.id] = el\r\n        })\r\n        if (searchResult) {\r\n            var showingBooks = searchResult.length > 0 ? searchResult.map((book, i) => {\r\n\r\n                if (book && booksWithStatusObject[book.id]) {\r\n                    return <Book booksWithStatus={booksWithStatusObject[book.id]['shelf']} key={i} book={book} bookShelfHandler={this.props.bookShelfHandler} />\r\n                } else {\r\n                    return <Book booksWithStatus={null} key={i} book={book} bookShelfHandler={this.props.bookShelfHandler} />\r\n                }\r\n            }\r\n            ) : []\r\n        }\r\n\r\n        // const query = this.state.query;\r\n        // const searchResult = this.state.searchResult;\r\n\r\n        // if (searchResult) {\r\n        //     var showingBooks = searchResult.length > 0 ? searchResult.map(book =>\r\n        //         <Book book={book} bookShelfHandler={this.props.bookShelfHandler} key={book.id} />\r\n        //     ) : []\r\n        // }\r\n        return (\r\n            <div className=\"search-books\">\r\n                <div className=\"search-books-bar\">\r\n                    <Link to=\"/\">\r\n                        <button className=\"close-search\">Close</button>\r\n                    </Link>\r\n                    <div className=\"search-books-input-wrapper\">\r\n                        <input type=\"text\"\r\n                            placeholder=\"Search by title or author\"\r\n                            value={query}\r\n                            onChange={(event) => this.UpdateQuery(event.target.value)}\r\n                        />\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"search-books-results\">\r\n                    <ol className=\"books-grid\">\r\n                        {showingBooks}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\nimport Home from './pages/Home';\r\nimport Search from './pages/Search';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport * as BooksAPI from './BooksAPI'\r\nimport './App.css'\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: []\r\n  }\r\n  async componentDidMount() {\r\n\r\n    const books = await BooksAPI.getAll()\r\n    this.setState({ books });\r\n\r\n  }\r\n\r\n  bookShelfHandler = (book, shelf) => {\r\n\r\n    BooksAPI.update(book, shelf).then(() => {\r\n      BooksAPI.getAll().then(data => {\r\n        this.setState({\r\n          books: data\r\n        })\r\n      })\r\n    })\r\n\r\n\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home books={this.state.books} bookShelfHandler={this.bookShelfHandler} />\r\n          </Route>\r\n          <Route path=\"/search\" >\r\n            <Search books={this.state.books} bookShelfHandler={this.bookShelfHandler} />\r\n          </Route>\r\n\r\n        </Switch>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BooksApp\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<BrowserRouter basename=\"/reactnd-project-myreads-starter\"><App /></BrowserRouter>, document.getElementById('root'))\r\n"],"sourceRoot":""}